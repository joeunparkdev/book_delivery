generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId           Int                 @id @default(autoincrement()) @map("userId")
  username         String
  kakaoUserId      Int?   
  email            String              @unique
  password         String
  isAdmin          Boolean             @map("is_admin")
  createdAt        DateTime            @default(now()) @map("createdAt")
  updatedAt        DateTime            @updatedAt @map("updatedAt")
  products         Products[]          @relation("UserProducts")
  refreshTokens    RefreshToken[]
  userProducts     UsersProducts[]
  followers  Follow[] @relation("Followers")
  following Follow[] @relation("Following")
}

model Products {
  productId        Int                 @id @default(autoincrement()) @map("productId")
  name             String
  price            Int
  city             String              @default("Unknown")
  description      String
  status           String              @default("FOR_SALE")
  createdAt        DateTime            @default(now()) @map("createdAt")
  updatedAt        DateTime            @updatedAt @map("updatedAt")
  userId           Int                 @map("userId")
  user             Users               @relation("UserProducts", fields: [userId], references: [userId], onDelete: Cascade)
  userProducts     UsersProducts[]
}

model RefreshToken {
  id               Int                 @id @default(autoincrement())
  token            String
  expirationDate   DateTime            @map("expiration_date")
  userId           Int                 @map("userId")
  user             Users               @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model UsersProducts {
  userId           Int
  productId        Int
  user             Users               @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product          Products            @relation(fields: [productId], references: [productId], onDelete: Cascade)

  @@id([userId, productId])
}

model Follow {
  followerId      Int                 
  follower       Users               @relation("Followers", fields: [followerId], references: [userId], onDelete: Cascade)
  followingId      Int                 
  following       Users               @relation("Following", fields: [followingId], references: [userId], onDelete: Cascade)

 @@id([followingId, followerId])
}